<?xml version="1.0"?>
<doc>
    <assembly>
        <name>HospitalProject2</name>
    </assembly>
    <members>
        <member name="M:HospitalProject2.Areas.HelpPage.ApiDescriptionExtensions.GetFriendlyId(System.Web.Http.Description.ApiDescription)">
            <summary>
            Generates an URI-friendly ID for the <see cref="T:System.Web.Http.Description.ApiDescription"/>. E.g. "Get-Values-id_name" instead of "GetValues/{id}?name={name}"
            </summary>
            <param name="description">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The ID as a string.</returns>
        </member>
        <member name="T:HospitalProject2.Areas.HelpPage.HelpPageConfig">
            <summary>
            Use this class to customize the Help Page.
            For example you can set a custom <see cref="T:System.Web.Http.Description.IDocumentationProvider"/> to supply the documentation
            or you can provide the samples for the requests/responses.
            </summary>
        </member>
        <member name="T:HospitalProject2.Areas.HelpPage.Controllers.HelpController">
            <summary>
            The controller that will handle requests for the help page.
            </summary>
        </member>
        <member name="M:HospitalProject2.Areas.HelpPage.HelpPageConfigurationExtensions.SetDocumentationProvider(System.Web.Http.HttpConfiguration,System.Web.Http.Description.IDocumentationProvider)">
            <summary>
            Sets the documentation provider for help page.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="documentationProvider">The documentation provider.</param>
        </member>
        <member name="M:HospitalProject2.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleObjects(System.Web.Http.HttpConfiguration,System.Collections.Generic.IDictionary{System.Type,System.Object})">
            <summary>
            Sets the objects that will be used by the formatters to produce sample requests/responses.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sampleObjects">The sample objects.</param>
        </member>
        <member name="M:HospitalProject2.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleRequest(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String)">
            <summary>
            Sets the sample request directly for the specified media type and action.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample request.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:HospitalProject2.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleRequest(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String,System.String[])">
            <summary>
            Sets the sample request directly for the specified media type and action with parameters.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample request.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:HospitalProject2.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleResponse(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String)">
            <summary>
            Sets the sample request directly for the specified media type of the action.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample response.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:HospitalProject2.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleResponse(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String,System.String[])">
            <summary>
            Sets the sample response directly for the specified media type of the action with specific parameters.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample response.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:HospitalProject2.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleForMediaType(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>
            Sets the sample directly for all actions with the specified media type.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample.</param>
            <param name="mediaType">The media type.</param>
        </member>
        <member name="M:HospitalProject2.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleForType(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.Type)">
            <summary>
            Sets the sample directly for all actions with the specified type and media type.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample.</param>
            <param name="mediaType">The media type.</param>
            <param name="type">The parameter type or return type of an action.</param>
        </member>
        <member name="M:HospitalProject2.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualRequestType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String)">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> passed to the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            The help page will use this information to produce more accurate request samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:HospitalProject2.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualRequestType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String,System.String[])">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> passed to the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            The help page will use this information to produce more accurate request samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:HospitalProject2.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualResponseType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String)">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> returned as part of the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            The help page will use this information to produce more accurate response samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:HospitalProject2.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualResponseType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String,System.String[])">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> returned as part of the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            The help page will use this information to produce more accurate response samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:HospitalProject2.Areas.HelpPage.HelpPageConfigurationExtensions.GetHelpPageSampleGenerator(System.Web.Http.HttpConfiguration)">
            <summary>
            Gets the help page sample generator.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <returns>The help page sample generator.</returns>
        </member>
        <member name="M:HospitalProject2.Areas.HelpPage.HelpPageConfigurationExtensions.SetHelpPageSampleGenerator(System.Web.Http.HttpConfiguration,HospitalProject2.Areas.HelpPage.HelpPageSampleGenerator)">
            <summary>
            Sets the help page sample generator.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sampleGenerator">The help page sample generator.</param>
        </member>
        <member name="M:HospitalProject2.Areas.HelpPage.HelpPageConfigurationExtensions.GetModelDescriptionGenerator(System.Web.Http.HttpConfiguration)">
            <summary>
            Gets the model description generator.
            </summary>
            <param name="config">The configuration.</param>
            <returns>The <see cref="T:HospitalProject2.Areas.HelpPage.ModelDescriptions.ModelDescriptionGenerator"/></returns>
        </member>
        <member name="M:HospitalProject2.Areas.HelpPage.HelpPageConfigurationExtensions.GetHelpPageApiModel(System.Web.Http.HttpConfiguration,System.String)">
            <summary>
            Gets the model that represents an API displayed on the help page. The model is initialized on the first call and cached for subsequent calls.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="apiDescriptionId">The <see cref="T:System.Web.Http.Description.ApiDescription"/> ID.</param>
            <returns>
            An <see cref="T:HospitalProject2.Areas.HelpPage.Models.HelpPageApiModel"/>
            </returns>
        </member>
        <member name="T:HospitalProject2.Areas.HelpPage.ModelDescriptions.ModelDescription">
            <summary>
            Describes a type model.
            </summary>
        </member>
        <member name="T:HospitalProject2.Areas.HelpPage.ModelDescriptions.ModelDescriptionGenerator">
            <summary>
            Generates model descriptions for given types.
            </summary>
        </member>
        <member name="T:HospitalProject2.Areas.HelpPage.ModelDescriptions.ModelNameAttribute">
            <summary>
            Use this attribute to change the name of the <see cref="T:HospitalProject2.Areas.HelpPage.ModelDescriptions.ModelDescription"/> generated for a type.
            </summary>
        </member>
        <member name="T:HospitalProject2.Areas.HelpPage.Models.HelpPageApiModel">
            <summary>
            The model that represents an API displayed on the help page.
            </summary>
        </member>
        <member name="M:HospitalProject2.Areas.HelpPage.Models.HelpPageApiModel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:HospitalProject2.Areas.HelpPage.Models.HelpPageApiModel"/> class.
            </summary>
        </member>
        <member name="P:HospitalProject2.Areas.HelpPage.Models.HelpPageApiModel.ApiDescription">
            <summary>
            Gets or sets the <see cref="P:HospitalProject2.Areas.HelpPage.Models.HelpPageApiModel.ApiDescription"/> that describes the API.
            </summary>
        </member>
        <member name="P:HospitalProject2.Areas.HelpPage.Models.HelpPageApiModel.UriParameters">
            <summary>
            Gets or sets the <see cref="T:HospitalProject2.Areas.HelpPage.ModelDescriptions.ParameterDescription"/> collection that describes the URI parameters for the API.
            </summary>
        </member>
        <member name="P:HospitalProject2.Areas.HelpPage.Models.HelpPageApiModel.RequestDocumentation">
            <summary>
            Gets or sets the documentation for the request.
            </summary>
        </member>
        <member name="P:HospitalProject2.Areas.HelpPage.Models.HelpPageApiModel.RequestModelDescription">
            <summary>
            Gets or sets the <see cref="T:HospitalProject2.Areas.HelpPage.ModelDescriptions.ModelDescription"/> that describes the request body.
            </summary>
        </member>
        <member name="P:HospitalProject2.Areas.HelpPage.Models.HelpPageApiModel.RequestBodyParameters">
            <summary>
            Gets the request body parameter descriptions.
            </summary>
        </member>
        <member name="P:HospitalProject2.Areas.HelpPage.Models.HelpPageApiModel.ResourceDescription">
            <summary>
            Gets or sets the <see cref="T:HospitalProject2.Areas.HelpPage.ModelDescriptions.ModelDescription"/> that describes the resource.
            </summary>
        </member>
        <member name="P:HospitalProject2.Areas.HelpPage.Models.HelpPageApiModel.ResourceProperties">
            <summary>
            Gets the resource property descriptions.
            </summary>
        </member>
        <member name="P:HospitalProject2.Areas.HelpPage.Models.HelpPageApiModel.SampleRequests">
            <summary>
            Gets the sample requests associated with the API.
            </summary>
        </member>
        <member name="P:HospitalProject2.Areas.HelpPage.Models.HelpPageApiModel.SampleResponses">
            <summary>
            Gets the sample responses associated with the API.
            </summary>
        </member>
        <member name="P:HospitalProject2.Areas.HelpPage.Models.HelpPageApiModel.ErrorMessages">
            <summary>
            Gets the error messages associated with this model.
            </summary>
        </member>
        <member name="T:HospitalProject2.Areas.HelpPage.HelpPageSampleGenerator">
            <summary>
            This class will generate the samples for the help page.
            </summary>
        </member>
        <member name="M:HospitalProject2.Areas.HelpPage.HelpPageSampleGenerator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:HospitalProject2.Areas.HelpPage.HelpPageSampleGenerator"/> class.
            </summary>
        </member>
        <member name="P:HospitalProject2.Areas.HelpPage.HelpPageSampleGenerator.ActualHttpMessageTypes">
            <summary>
            Gets CLR types that are used as the content of <see cref="T:System.Net.Http.HttpRequestMessage"/> or <see cref="T:System.Net.Http.HttpResponseMessage"/>.
            </summary>
        </member>
        <member name="P:HospitalProject2.Areas.HelpPage.HelpPageSampleGenerator.ActionSamples">
            <summary>
            Gets the objects that are used directly as samples for certain actions.
            </summary>
        </member>
        <member name="P:HospitalProject2.Areas.HelpPage.HelpPageSampleGenerator.SampleObjects">
            <summary>
            Gets the objects that are serialized as samples by the supported formatters.
            </summary>
        </member>
        <member name="P:HospitalProject2.Areas.HelpPage.HelpPageSampleGenerator.SampleObjectFactories">
            <summary>
            Gets factories for the objects that the supported formatters will serialize as samples. Processed in order,
            stopping when the factory successfully returns a non-<see langref="null"/> object.
            </summary>
            <remarks>
            Collection includes just <see cref="M:HospitalProject2.Areas.HelpPage.ObjectGenerator.GenerateObject(System.Type)"/> initially. Use
            <code>SampleObjectFactories.Insert(0, func)</code> to provide an override and
            <code>SampleObjectFactories.Add(func)</code> to provide a fallback.</remarks>
        </member>
        <member name="M:HospitalProject2.Areas.HelpPage.HelpPageSampleGenerator.GetSampleRequests(System.Web.Http.Description.ApiDescription)">
            <summary>
            Gets the request body samples for a given <see cref="T:System.Web.Http.Description.ApiDescription"/>.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The samples keyed by media type.</returns>
        </member>
        <member name="M:HospitalProject2.Areas.HelpPage.HelpPageSampleGenerator.GetSampleResponses(System.Web.Http.Description.ApiDescription)">
            <summary>
            Gets the response body samples for a given <see cref="T:System.Web.Http.Description.ApiDescription"/>.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The samples keyed by media type.</returns>
        </member>
        <member name="M:HospitalProject2.Areas.HelpPage.HelpPageSampleGenerator.GetSample(System.Web.Http.Description.ApiDescription,HospitalProject2.Areas.HelpPage.SampleDirection)">
            <summary>
            Gets the request or response body samples.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <param name="sampleDirection">The value indicating whether the sample is for a request or for a response.</param>
            <returns>The samples keyed by media type.</returns>
        </member>
        <member name="M:HospitalProject2.Areas.HelpPage.HelpPageSampleGenerator.GetActionSample(System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.Type,System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue,HospitalProject2.Areas.HelpPage.SampleDirection)">
            <summary>
            Search for samples that are provided directly through <see cref="P:HospitalProject2.Areas.HelpPage.HelpPageSampleGenerator.ActionSamples"/>.
            </summary>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
            <param name="type">The CLR type.</param>
            <param name="formatter">The formatter.</param>
            <param name="mediaType">The media type.</param>
            <param name="sampleDirection">The value indicating whether the sample is for a request or for a response.</param>
            <returns>The sample that matches the parameters.</returns>
        </member>
        <member name="M:HospitalProject2.Areas.HelpPage.HelpPageSampleGenerator.GetSampleObject(System.Type)">
            <summary>
            Gets the sample object that will be serialized by the formatters. 
            First, it will look at the <see cref="P:HospitalProject2.Areas.HelpPage.HelpPageSampleGenerator.SampleObjects"/>. If no sample object is found, it will try to create
            one using <see cref="M:HospitalProject2.Areas.HelpPage.HelpPageSampleGenerator.DefaultSampleObjectFactory(HospitalProject2.Areas.HelpPage.HelpPageSampleGenerator,System.Type)"/> (which wraps an <see cref="T:HospitalProject2.Areas.HelpPage.ObjectGenerator"/>) and other
            factories in <see cref="P:HospitalProject2.Areas.HelpPage.HelpPageSampleGenerator.SampleObjectFactories"/>.
            </summary>
            <param name="type">The type.</param>
            <returns>The sample object.</returns>
        </member>
        <member name="M:HospitalProject2.Areas.HelpPage.HelpPageSampleGenerator.ResolveHttpRequestMessageType(System.Web.Http.Description.ApiDescription)">
            <summary>
            Resolves the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> passed to the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The type.</returns>
        </member>
        <member name="M:HospitalProject2.Areas.HelpPage.HelpPageSampleGenerator.ResolveType(System.Web.Http.Description.ApiDescription,System.String,System.String,System.Collections.Generic.IEnumerable{System.String},HospitalProject2.Areas.HelpPage.SampleDirection,System.Collections.ObjectModel.Collection{System.Net.Http.Formatting.MediaTypeFormatter}@)">
            <summary>
            Resolves the type of the action parameter or return value when <see cref="T:System.Net.Http.HttpRequestMessage"/> or <see cref="T:System.Net.Http.HttpResponseMessage"/> is used.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
            <param name="sampleDirection">The value indicating whether the sample is for a request or a response.</param>
            <param name="formatters">The formatters.</param>
        </member>
        <member name="M:HospitalProject2.Areas.HelpPage.HelpPageSampleGenerator.WriteSampleObjectUsingFormatter(System.Net.Http.Formatting.MediaTypeFormatter,System.Object,System.Type,System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>
            Writes the sample object using formatter.
            </summary>
            <param name="formatter">The formatter.</param>
            <param name="value">The value.</param>
            <param name="type">The type.</param>
            <param name="mediaType">Type of the media.</param>
            <returns></returns>
        </member>
        <member name="T:HospitalProject2.Areas.HelpPage.HelpPageSampleKey">
            <summary>
            This is used to identify the place where the sample should be applied.
            </summary>
        </member>
        <member name="M:HospitalProject2.Areas.HelpPage.HelpPageSampleKey.#ctor(System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>
            Creates a new <see cref="T:HospitalProject2.Areas.HelpPage.HelpPageSampleKey"/> based on media type.
            </summary>
            <param name="mediaType">The media type.</param>
        </member>
        <member name="M:HospitalProject2.Areas.HelpPage.HelpPageSampleKey.#ctor(System.Net.Http.Headers.MediaTypeHeaderValue,System.Type)">
            <summary>
            Creates a new <see cref="T:HospitalProject2.Areas.HelpPage.HelpPageSampleKey"/> based on media type and CLR type.
            </summary>
            <param name="mediaType">The media type.</param>
            <param name="type">The CLR type.</param>
        </member>
        <member name="M:HospitalProject2.Areas.HelpPage.HelpPageSampleKey.#ctor(HospitalProject2.Areas.HelpPage.SampleDirection,System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates a new <see cref="T:HospitalProject2.Areas.HelpPage.HelpPageSampleKey"/> based on <see cref="P:HospitalProject2.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>, controller name, action name and parameter names.
            </summary>
            <param name="sampleDirection">The <see cref="P:HospitalProject2.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:HospitalProject2.Areas.HelpPage.HelpPageSampleKey.#ctor(System.Net.Http.Headers.MediaTypeHeaderValue,HospitalProject2.Areas.HelpPage.SampleDirection,System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates a new <see cref="T:HospitalProject2.Areas.HelpPage.HelpPageSampleKey"/> based on media type, <see cref="P:HospitalProject2.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>, controller name, action name and parameter names.
            </summary>
            <param name="mediaType">The media type.</param>
            <param name="sampleDirection">The <see cref="P:HospitalProject2.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="P:HospitalProject2.Areas.HelpPage.HelpPageSampleKey.ControllerName">
            <summary>
            Gets the name of the controller.
            </summary>
            <value>
            The name of the controller.
            </value>
        </member>
        <member name="P:HospitalProject2.Areas.HelpPage.HelpPageSampleKey.ActionName">
            <summary>
            Gets the name of the action.
            </summary>
            <value>
            The name of the action.
            </value>
        </member>
        <member name="P:HospitalProject2.Areas.HelpPage.HelpPageSampleKey.MediaType">
            <summary>
            Gets the media type.
            </summary>
            <value>
            The media type.
            </value>
        </member>
        <member name="P:HospitalProject2.Areas.HelpPage.HelpPageSampleKey.ParameterNames">
            <summary>
            Gets the parameter names.
            </summary>
        </member>
        <member name="P:HospitalProject2.Areas.HelpPage.HelpPageSampleKey.SampleDirection">
            <summary>
            Gets the <see cref="P:HospitalProject2.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>.
            </summary>
        </member>
        <member name="T:HospitalProject2.Areas.HelpPage.ImageSample">
            <summary>
            This represents an image sample on the help page. There's a display template named ImageSample associated with this class.
            </summary>
        </member>
        <member name="M:HospitalProject2.Areas.HelpPage.ImageSample.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:HospitalProject2.Areas.HelpPage.ImageSample"/> class.
            </summary>
            <param name="src">The URL of an image.</param>
        </member>
        <member name="T:HospitalProject2.Areas.HelpPage.InvalidSample">
            <summary>
            This represents an invalid sample on the help page. There's a display template named InvalidSample associated with this class.
            </summary>
        </member>
        <member name="T:HospitalProject2.Areas.HelpPage.ObjectGenerator">
            <summary>
            This class will create an object of a given type and populate it with sample data.
            </summary>
        </member>
        <member name="M:HospitalProject2.Areas.HelpPage.ObjectGenerator.GenerateObject(System.Type)">
            <summary>
            Generates an object for a given type. The type needs to be public, have a public default constructor and settable public properties/fields. Currently it supports the following types:
            Simple types: <see cref="T:System.Int32"/>, <see cref="T:System.String"/>, <see cref="T:System.Enum"/>, <see cref="T:System.DateTime"/>, <see cref="T:System.Uri"/>, etc.
            Complex types: POCO types.
            Nullables: <see cref="T:System.Nullable`1"/>.
            Arrays: arrays of simple types or complex types.
            Key value pairs: <see cref="T:System.Collections.Generic.KeyValuePair`2"/>
            Tuples: <see cref="T:System.Tuple`1"/>, <see cref="T:System.Tuple`2"/>, etc
            Dictionaries: <see cref="T:System.Collections.Generic.IDictionary`2"/> or anything deriving from <see cref="T:System.Collections.Generic.IDictionary`2"/>.
            Collections: <see cref="T:System.Collections.Generic.IList`1"/>, <see cref="T:System.Collections.Generic.IEnumerable`1"/>, <see cref="T:System.Collections.Generic.ICollection`1"/>, <see cref="T:System.Collections.IList"/>, <see cref="T:System.Collections.IEnumerable"/>, <see cref="T:System.Collections.ICollection"/> or anything deriving from <see cref="T:System.Collections.Generic.ICollection`1"/> or <see cref="T:System.Collections.IList"/>.
            Queryables: <see cref="T:System.Linq.IQueryable"/>, <see cref="T:System.Linq.IQueryable`1"/>.
            </summary>
            <param name="type">The type.</param>
            <returns>An object of the given type.</returns>
        </member>
        <member name="T:HospitalProject2.Areas.HelpPage.SampleDirection">
            <summary>
            Indicates whether the sample is used for request or response
            </summary>
        </member>
        <member name="T:HospitalProject2.Areas.HelpPage.TextSample">
            <summary>
            This represents a preformatted text sample on the help page. There's a display template named TextSample associated with this class.
            </summary>
        </member>
        <member name="T:HospitalProject2.Areas.HelpPage.XmlDocumentationProvider">
            <summary>
            A custom <see cref="T:System.Web.Http.Description.IDocumentationProvider"/> that reads the API documentation from an XML documentation file.
            </summary>
        </member>
        <member name="M:HospitalProject2.Areas.HelpPage.XmlDocumentationProvider.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:HospitalProject2.Areas.HelpPage.XmlDocumentationProvider"/> class.
            </summary>
            <param name="documentPath">The physical path to XML document.</param>
        </member>
        <member name="M:HospitalProject2.Controllers.CareersDataController.ListCareers">
            <summary>
            Returns all Careers in the system
            </summary>
            <returns>
            Content: all Careers information in the database, including the related department names
            </returns>
            <example> GET: api/CareersData/ListCareers </example>       
        </member>
        <member name="M:HospitalProject2.Controllers.CareersDataController.ListCareersForDepartment(System.Int32)">
            <summary>
            Returns all Careers in the system related to a particular department
            </summary>
            <param name="id">Department Primary key</param>
            <returns> CONTENT: all Careers in the database under a particular department</returns>
        </member>
        <member name="M:HospitalProject2.Controllers.CareersDataController.FindCareers(System.Int32)">
            <summary>
            Find specific career in the system
            </summary>
            <param name="id">The primary key of the Careers</param>
            <returns>CONTENT: A career in the system matching up to the job_id primary key</returns>
            <example>GET: api/CareersData/FindCareers/5 </example>
        </member>
        <member name="M:HospitalProject2.Controllers.CareersDataController.UpdateCareers(System.Int32,HospitalProject2.Models.Careers)">
            <summary>
            Updates a particular Career in the system with POST data input
            </summary>
            <param name="id">The job_id which represents the career</param>
            <param name="Careers">JSON form data of Careers</param>
            <returns></returns>
            <example> POST: api/CareersData/UpdateCareers/5 </example> 
        </member>
        <member name="M:HospitalProject2.Controllers.CareersDataController.AddCareers(HospitalProject2.Models.Careers)">
            <summary>
            Add a career to the system
            </summary>
            <param name="Careers">JSON form data of Careers</param>
            <returns>CONTENT: job_id, Career data</returns>
            <example>POST: api/CareersData/AddCareers</example> 
        </member>
        <member name="M:HospitalProject2.Controllers.CareersDataController.DeleteCareers(System.Int32)">
            <summary>
            Delete a career from the system by its id
            </summary>
            <param name="id">The primary key of the Careers</param>
            <returns></returns>
            <example>POST: api/CareersData/DeleteCareers/5 </example> 
        </member>
        <member name="M:HospitalProject2.Controllers.ProgramsController.List">
            <summary>
            list function for all programs
            </summary>
            <returns>a view of all programs listed</returns>
        </member>
        <member name="M:HospitalProject2.Controllers.ProgramsController.Details(System.Int32)">
            <summary>
            details function for a specified program
            </summary>
            <param name="id">program id</param>
            <returns>a view of one program details specified by id, including volunteers and services related to it</returns>
        </member>
        <member name="M:HospitalProject2.Controllers.ProgramsController.New">
            <summary>
            when creating a new program, this function provides the department options to the view which allows the user to fill in the other fields about a program
            </summary>
            <returns>lists departments to add to the program information before creating a new program in the database</returns>
        </member>
        <member name="M:HospitalProject2.Controllers.ProgramsController.Create(HospitalProject2.Models.Programs)">
            <summary>
            creates new program in the database using the api function to add a new program
            </summary>
            <param name="program">program model</param>
            <returns>new program in the database</returns>
        </member>
        <member name="M:HospitalProject2.Controllers.ProgramsController.Edit(System.Int32)">
            <summary>
            finds the program by id, supplies a page for editing programs, supplies departments to select from when editing
            </summary>
            <param name="id">program id</param>
            <returns>edit page for a specific program</returns>
        </member>
        <member name="M:HospitalProject2.Controllers.ProgramsController.Update(System.Int32,HospitalProject2.Models.Programs)">
            <summary>
            applies changes made in Edit function to program in database
            </summary>
            <param name="id">program id</param>
            <param name="program">program model</param>
            <returns>update program information and returns to list</returns>
        </member>
        <member name="M:HospitalProject2.Controllers.ProgramsController.DeleteConfirm(System.Int32)">
            <summary>
            confirms the deletion of a specific program
            </summary>
            <param name="id">program id</param>
            <returns>the selected program that is going to be deleted</returns>
        </member>
        <member name="M:HospitalProject2.Controllers.ProgramsController.Delete(System.Int32)">
            <summary>
            deletes the program from the database
            </summary>
            <param name="id">program id</param>
            <returns>the program is removed from the database and redirects to the list function</returns>
        </member>
        <member name="M:HospitalProject2.Controllers.ProgramsDataController.ListPrograms">
            <summary>
            api function to list all programs in database
            </summary>
            <returns>a list of all programs</returns>
        </member>
        <member name="M:HospitalProject2.Controllers.ProgramsDataController.FindProgram(System.Int32)">
            <summary>
            api function to list one program based on id
            </summary>
            <param name="id">id of program</param>
            <returns>one program with the id specified</returns>
        </member>
        <member name="M:HospitalProject2.Controllers.ProgramsDataController.ListProgamsForDepartment(System.Int32)">
            <summary>
            api function to list all program related to one department
            </summary>
            <param name="id">department id</param>
            <returns>programs with the same department id</returns>
        </member>
        <member name="M:HospitalProject2.Controllers.ProgramsDataController.UpdateProgram(System.Int32,HospitalProject2.Models.Programs)">
            <summary>
            api function to apply changes to a specified program
            </summary>
            <param name="id">program id</param>
            <param name="programs">program model</param>
            <returns>updated program information for one program, saved to database</returns>
        </member>
        <member name="M:HospitalProject2.Controllers.ProgramsDataController.AddProgram(HospitalProject2.Models.Programs)">
            <summary>
            api function to add a new program to the database
            </summary>
            <param name="programs">program model</param>
            <returns>a single new program added to the database</returns>
        </member>
        <member name="M:HospitalProject2.Controllers.ProgramsDataController.DeleteProgram(System.Int32)">
            <summary>
            api function to delete an existing program from the database
            </summary>
            <param name="id">program id</param>
            <returns>the program seletced by id is removed from the database</returns>
        </member>
        <member name="M:HospitalProject2.Controllers.ServicesController.List">
            <summary>
            list function for all services
            </summary>
            <returns>a view of all services</returns>
        </member>
        <member name="M:HospitalProject2.Controllers.ServicesController.Details(System.Nullable{System.Int32})">
            <summary>
            details function for a specified service
            </summary>
            <param name="id">service id</param>
            <returns>view of one service details by id</returns>
        </member>
        <member name="M:HospitalProject2.Controllers.ServicesController.New">
            <summary>
            when creating a new service, this function provides the program options to the view which allows the user to fill in the other fields about a service
            </summary>
            <returns>lists programs to add to the service information before creating new service</returns>
        </member>
        <member name="M:HospitalProject2.Controllers.ServicesController.Create(HospitalProject2.Models.Services)">
            <summary>
            creates new service using api fucntion to add a new service
            </summary>
            <param name="service">service model</param>
            <returns>new service in the database and returns to list</returns>
        </member>
        <member name="M:HospitalProject2.Controllers.ServicesController.Edit(System.Nullable{System.Int32})">
            <summary>
            finds service by id and supplies a list of programs to choose from
            </summary>
            <param name="id">service id</param>
            <returns>view for updating a service</returns>
        </member>
        <member name="M:HospitalProject2.Controllers.ServicesController.Update(System.Int32,HospitalProject2.Models.Services)">
            <summary>
            applies changes made in Edit function to the selected service
            </summary>
            <param name="id">service id</param>
            <param name="service">service model</param>
            <returns>updated info in service list</returns>
        </member>
        <member name="M:HospitalProject2.Controllers.ServicesController.Delete(System.Nullable{System.Int32})">
            <summary>
            confirms the deletion of a specific service
            </summary>
            <param name="id">service id</param>
            <returns>the selected service that is going to be deleted</returns>
        </member>
        <member name="M:HospitalProject2.Controllers.ServicesController.DeleteConfirm(System.Int32)">
            <summary>
            deletes the service
            </summary>
            <param name="id">service id</param>
            <returns>service is removed from list</returns>
        </member>
        <member name="M:HospitalProject2.Controllers.ServicesDataController.ListServices">
            <summary>
            api function to list all services in database
            </summary>
            <returns>a list of all services</returns>
        </member>
        <member name="M:HospitalProject2.Controllers.ServicesDataController.FindService(System.Int32)">
            <summary>
            api function to list one service based on id
            </summary>
            <param name="id">service id</param>
            <returns>one service using the id sepcified</returns>
        </member>
        <member name="M:HospitalProject2.Controllers.ServicesDataController.ListServicesForProgram(System.Int32)">
            <summary>
            api function to list all services related to one program
            </summary>
            <param name="id">program id</param>
            <returns>services with the same program id</returns>
        </member>
        <member name="M:HospitalProject2.Controllers.ServicesDataController.UpdateService(System.Int32,HospitalProject2.Models.Services)">
            <summary>
            api function to apply changes to a specified service
            </summary>
            <param name="id">pservice id</param>
            <param name="services">service model</param>
            <returns>updated service info for one service, saved to database</returns>
        </member>
        <member name="M:HospitalProject2.Controllers.ServicesDataController.AddService(HospitalProject2.Models.Services)">
            <summary>
            api function to add a new service to the databse
            </summary>
            <param name="services">service model</param>
            <returns>a sinlge new service added to the database</returns>
        </member>
        <member name="M:HospitalProject2.Controllers.ServicesDataController.DeleteService(System.Int32)">
            <summary>
            api function to delete an exisiting service from the database
            </summary>
            <param name="id">service id</param>
            <returns>the service selected by id is removed from the database</returns>
        </member>
        <member name="M:HospitalProject2.Controllers.VolunteersDataController.ListVolunteers">
            <summary>
            Returns all Volunteers in the system for the Admin, return the own volunteer record for the guest
            </summary>
            <returns>
            Content: all Volunteers information in the database, including the related program names
            </returns>
            <example> GET: api/VolunteersData/ListVolunteers </example>   
        </member>
        <member name="M:HospitalProject2.Controllers.VolunteersDataController.ListVolunteersForProgram(System.Int32)">
            <summary>
            Returns all Volunteers in the system related to a particular program
            </summary>
            <param name="id">Program Primary key</param>
            <returns>CONTENT: all volunteers in the database under a particular program</returns>
        </member>
        <member name="M:HospitalProject2.Controllers.VolunteersDataController.FindVolunteers(System.Int32)">
            <summary>
            Find specific volunteer in the system
            </summary>
            <param name="id">The primary key of the Volunteers</param>
            <returns>CONTENT: A volunteer in the system matching up to the volunteer_id primary key</returns>
            <example> GET: api/VolunteersData/FindVolunteers/5 </example>
        </member>
        <member name="M:HospitalProject2.Controllers.VolunteersDataController.UpdateVolunteers(System.Int32,HospitalProject2.Models.Volunteers)">
            <summary>
            Updates a particular Volunteer in the system with POST data input
            </summary>
            <param name="id">The volunteer_id which represents the volunteer</param>
            <param name="Volunteers">JSON form data of Volunteers</param>
            <returns></returns>
            <example> POST: api/VolunteersData/UpdateVolunteers/5 </example> 
        </member>
        <member name="M:HospitalProject2.Controllers.VolunteersDataController.AddVolunteers(HospitalProject2.Models.Volunteers)">
            <summary>
            Add a volunteer to the system
            </summary>
            <param name="Volunteers">JSON form data of Volunteers</param>
            <returns>CONTENT: volunteer_id, Volunteer data</returns>
            <example> POST: api/VolunteersData/AddVolunteers </example> 
        </member>
        <member name="M:HospitalProject2.Controllers.VolunteersDataController.DeleteVolunteers(System.Int32)">
            <summary>
            Delete a volunteer from the system by its id
            </summary>
            <param name="id">The primary key of the Volunteers</param>
            <returns></returns>
            <example> POST: api/VolunteersData/DeleteVolunteers/5 </example>
        </member>
    </members>
</doc>
